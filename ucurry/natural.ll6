; ModuleID = 'uCurry'
source_filename = "uCurry"

%List = type { i8*, { i1 (i8*, i1)*, i8* }*, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* }

@fmt = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@fmt.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@vcon_name = private unnamed_addr constant [4 x i8] c"Nil\00", align 1
@vcon_name.4 = private unnamed_addr constant [5 x i8] c"Cons\00", align 1
@strlit = private unnamed_addr constant [17 x i8] c"Case not matched\00", align 1

define i32 @main(i32 %0) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* getelementptr ({ { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*
  %closurepp = alloca { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, align 8
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp, align 8
  %map = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp, align 8
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint ({ { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall1 to { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field = getelementptr inbounds { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %map, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %capstruct = bitcast { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field2 = getelementptr inbounds { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)* @map, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field3, align 8
  %malloccall4 = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* getelementptr ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure5 = bitcast i8* %malloccall4 to { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*
  %closurepp6 = alloca { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, align 8
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure5, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp6, align 8
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct8 = bitcast i8* %malloccall7 to {}*
  %capstruct9 = bitcast {}* %captured_struct8 to i8*
  %struct_field10 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure5, i32 0, i32 0
  store { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)* @addone, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field10, align 8
  %struct_field11 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure5, i32 0, i32 1
  store i8* %capstruct9, i8** %struct_field11, align 8
  %malloccall12 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* getelementptr ({ { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure13 = bitcast i8* %malloccall12 to { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*
  %closurepp14 = alloca { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, align 8
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure13, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp14, align 8
  %addone = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp6, align 8
  %map15 = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp, align 8
  %nat = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp14, align 8
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct17 = bitcast i8* %malloccall16 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field18 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct17, i32 0, i32 2
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %nat, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field18, align 8
  %struct_field19 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct17, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %map15, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field19, align 8
  %struct_field20 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct17, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %addone, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field20, align 8
  %capstruct21 = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct17 to i8*
  %struct_field22 = getelementptr inbounds { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure13, i32 0, i32 0
  store { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)* @nat, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field22, align 8
  %struct_field23 = getelementptr inbounds { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure13, i32 0, i32 1
  store i8* %capstruct21, i8** %struct_field23, align 8
  %malloccall24 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure25 = bitcast i8* %malloccall24 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*
  %closurepp26 = alloca { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, align 8
  store { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure25, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp26, align 8
  %takePrint = load { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp26, align 8
  %malloccall27 = tail call i8* @malloc(i32 ptrtoint ({ { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct28 = bitcast i8* %malloccall27 to { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field29 = getelementptr inbounds { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct28, i32 0, i32 0
  store { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %takePrint, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field29, align 8
  %capstruct30 = bitcast { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct28 to i8*
  %struct_field31 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure25, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)* @takePrint, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field31, align 8
  %struct_field32 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure25, i32 0, i32 1
  store i8* %capstruct30, i8** %struct_field32, align 8
  %takePrint33 = load { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp26, align 8
  %struct_field34 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %takePrint33, i32 0, i32 0
  %fdef = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field34, align 8
  %struct_field35 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %takePrint33, i32 0, i32 1
  %cap = load i8*, i8** %struct_field35, align 8
  %apply_result = call { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap, i1 false)
  %struct_field36 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 0
  %fdef37 = load { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)** %struct_field36, align 8
  %struct_field38 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 1
  %cap39 = load i8*, i8** %struct_field38, align 8
  %malloccall40 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure41 = bitcast i8* %malloccall40 to { %List* (i8*, i1)*, i8* }*
  %nat42 = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %closurepp14, align 8
  %malloccall43 = tail call i8* @malloc(i32 ptrtoint ({ { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct44 = bitcast i8* %malloccall43 to { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field45 = getelementptr inbounds { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct44, i32 0, i32 0
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %nat42, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field45, align 8
  %capstruct46 = bitcast { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct44 to i8*
  %struct_field47 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure41, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.29, %List* (i8*, i1)** %struct_field47, align 8
  %struct_field48 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure41, i32 0, i32 1
  store i8* %capstruct46, i8** %struct_field48, align 8
  %apply_result49 = call { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fdef37(i8* %cap39, { %List* (i8*, i1)*, i8* }* %fun_closure41)
  %struct_field50 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result49, i32 0, i32 0
  %fdef51 = load i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i32 (i8*, { i32 (i8*, i1)*, i8* }*)** %struct_field50, align 8
  %struct_field52 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result49, i32 0, i32 1
  %cap53 = load i8*, i8** %struct_field52, align 8
  %malloccall54 = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure55 = bitcast i8* %malloccall54 to { i32 (i8*, i1)*, i8* }*
  %malloccall56 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct57 = bitcast i8* %malloccall56 to {}*
  %capstruct58 = bitcast {}* %captured_struct57 to i8*
  %struct_field59 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure55, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.31, i32 (i8*, i1)** %struct_field59, align 8
  %struct_field60 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure55, i32 0, i32 1
  store i8* %capstruct58, i8** %struct_field60, align 8
  %apply_result61 = call i32 %fdef51(i8* %cap53, { i32 (i8*, i1)*, i8* }* %fun_closure55)
  ret i32 0
}

define { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* @map(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* getelementptr ({ { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }*
  %struct_field = getelementptr inbounds { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({ { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall2 to { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field3 = getelementptr inbounds { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field3, align 8
  %capstruct = bitcast { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field4 = getelementptr inbounds { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 0
  store { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)* @lambda, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)** %struct_field4, align 8
  %struct_field5 = getelementptr inbounds { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field5, align 8
  ret { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure
}

declare noalias i8* @malloc(i32)

define { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* @lambda(i8* %0, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %f) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %f1 = alloca { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, align 8
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %f, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %f1, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* getelementptr ({ %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }*
  %f2 = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %f1, align 8
  %struct_field = getelementptr inbounds { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall3 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field4 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field4, align 8
  %struct_field5 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %f2, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field5, align 8
  %capstruct = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field6 = getelementptr inbounds { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 0
  store %List* (i8*, { %List* (i8*, i1)*, i8* }*)* @lambda.5, %List* (i8*, { %List* (i8*, i1)*, i8* }*)** %struct_field6, align 8
  %struct_field7 = getelementptr inbounds { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field7, align 8
  ret { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure
}

define %List* @lambda.5(i8* %0, { %List* (i8*, i1)*, i8* }* %xs) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %xs1 = alloca { %List* (i8*, i1)*, i8* }*, align 8
  store { %List* (i8*, i1)*, i8* }* %xs, { %List* (i8*, i1)*, i8* }** %xs1, align 8
  %xs2 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %xs1, align 8
  %struct_field = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %xs2, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %xs2, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds %List, %List* %apply_result, i32 0, i32 0
  %tag = load i8*, i8** %struct_field5, align 8
  %temp = icmp eq i8* %tag, getelementptr inbounds ([5 x i8], [5 x i8]* @vcon_name.4, i32 0, i32 0)
  br i1 %temp, label %then, label %else

then:                                             ; preds = %entry
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i32 (i8*, i1)*, i8* }*
  %xs6 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %xs1, align 8
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall7 to { { %List* (i8*, i1)*, i8* }* }*
  %struct_field8 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %xs6, { %List* (i8*, i1)*, i8* }** %struct_field8, align 8
  %capstruct = bitcast { { %List* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field9 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.6, i32 (i8*, i1)** %struct_field9, align 8
  %struct_field10 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field10, align 8
  %y = alloca { i32 (i8*, i1)*, i8* }*, align 8
  store { i32 (i8*, i1)*, i8* }* %fun_closure, { i32 (i8*, i1)*, i8* }** %y, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure12 = bitcast i8* %malloccall11 to { %List* (i8*, i1)*, i8* }*
  %xs13 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %xs1, align 8
  %malloccall14 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct15 = bitcast i8* %malloccall14 to { { %List* (i8*, i1)*, i8* }* }*
  %struct_field16 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %captured_struct15, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %xs13, { %List* (i8*, i1)*, i8* }** %struct_field16, align 8
  %capstruct17 = bitcast { { %List* (i8*, i1)*, i8* }* }* %captured_struct15 to i8*
  %struct_field18 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure12, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.7, %List* (i8*, i1)** %struct_field18, align 8
  %struct_field19 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure12, i32 0, i32 1
  store i8* %capstruct17, i8** %struct_field19, align 8
  %ys = alloca { %List* (i8*, i1)*, i8* }*, align 8
  store { %List* (i8*, i1)*, i8* }* %fun_closure12, { %List* (i8*, i1)*, i8* }** %ys, align 8
  %malloccall20 = tail call i8* @malloc(i32 ptrtoint (%List* getelementptr (%List, %List* null, i32 1) to i32))
  %List = bitcast i8* %malloccall20 to %List*
  %malloccall21 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* getelementptr ({ { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure22 = bitcast i8* %malloccall21 to { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }*
  %struct_field23 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field23, align 8
  %struct_field24 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar25 = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field24, align 8
  %y26 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %y, align 8
  %ys27 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %ys, align 8
  %malloccall28 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct29 = bitcast i8* %malloccall28 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }*
  %struct_field30 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct29, i32 0, i32 3
  store { %List* (i8*, i1)*, i8* }* %ys27, { %List* (i8*, i1)*, i8* }** %struct_field30, align 8
  %struct_field31 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct29, i32 0, i32 2
  store { i32 (i8*, i1)*, i8* }* %y26, { i32 (i8*, i1)*, i8* }** %struct_field31, align 8
  %struct_field32 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct29, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar25, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field32, align 8
  %struct_field33 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct29, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field33, align 8
  %capstruct34 = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct29 to i8*
  %struct_field35 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fun_closure22, i32 0, i32 0
  store { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)* @lambda.8, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)** %struct_field35, align 8
  %struct_field36 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fun_closure22, i32 0, i32 1
  store i8* %capstruct34, i8** %struct_field36, align 8
  %struct_field37 = getelementptr inbounds %List, %List* %List, i32 0, i32 2
  store { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fun_closure22, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }** %struct_field37, align 8
  %struct_field38 = getelementptr inbounds %List, %List* %List, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @vcon_name.4, i32 0, i32 0), i8** %struct_field38, align 8
  br label %ifcon61

else:                                             ; preds = %entry
  %xs39 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %xs1, align 8
  %struct_field40 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %xs39, i32 0, i32 0
  %fdef41 = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field40, align 8
  %struct_field42 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %xs39, i32 0, i32 1
  %cap43 = load i8*, i8** %struct_field42, align 8
  %apply_result44 = call %List* %fdef41(i8* %cap43, i1 false)
  %struct_field45 = getelementptr inbounds %List, %List* %apply_result44, i32 0, i32 0
  %tag46 = load i8*, i8** %struct_field45, align 8
  %temp47 = icmp eq i8* %tag46, getelementptr inbounds ([4 x i8], [4 x i8]* @vcon_name, i32 0, i32 0)
  br i1 %temp47, label %then48, label %else60

then48:                                           ; preds = %else
  %malloccall49 = tail call i8* @malloc(i32 ptrtoint (%List* getelementptr (%List, %List* null, i32 1) to i32))
  %List50 = bitcast i8* %malloccall49 to %List*
  %malloccall51 = tail call i8* @malloc(i32 ptrtoint ({ i1 (i8*, i1)*, i8* }* getelementptr ({ i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure52 = bitcast i8* %malloccall51 to { i1 (i8*, i1)*, i8* }*
  %malloccall53 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct54 = bitcast i8* %malloccall53 to {}*
  %capstruct55 = bitcast {}* %captured_struct54 to i8*
  %struct_field56 = getelementptr inbounds { i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* %fun_closure52, i32 0, i32 0
  store i1 (i8*, i1)* @lambda.14, i1 (i8*, i1)** %struct_field56, align 8
  %struct_field57 = getelementptr inbounds { i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* %fun_closure52, i32 0, i32 1
  store i8* %capstruct55, i8** %struct_field57, align 8
  %struct_field58 = getelementptr inbounds %List, %List* %List50, i32 0, i32 1
  store { i1 (i8*, i1)*, i8* }* %fun_closure52, { i1 (i8*, i1)*, i8* }** %struct_field58, align 8
  %struct_field59 = getelementptr inbounds %List, %List* %List50, i32 0, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @vcon_name, i32 0, i32 0), i8** %struct_field59, align 8
  br label %ifcon

else60:                                           ; preds = %else
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.3, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @strlit, i32 0, i32 0))
  br label %ifcon

ifcon:                                            ; preds = %else60, %then48
  %iftmp = phi %List* [ %List50, %then48 ], [ undef, %else60 ]
  br label %ifcon61

ifcon61:                                          ; preds = %ifcon, %then
  %iftmp62 = phi %List* [ %List, %then ], [ %iftmp, %ifcon ]
  ret %List* %iftmp62
}

define i32 @lambda.6(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds %List, %List* %apply_result, i32 0, i32 2
  %fi = load { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }** %struct_field5, align 8
  %struct_field6 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 0
  %fdef7 = load { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)** %struct_field6, align 8
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 1
  %cap9 = load i8*, i8** %struct_field8, align 8
  %apply_result10 = call { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %fdef7(i8* %cap9, i1 false)
  %struct_field11 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %apply_result10, i32 0, i32 0
  %"tuple field" = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %struct_field11, align 8
  %struct_field12 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 0
  %fdef13 = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field12, align 8
  %struct_field14 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 1
  %cap15 = load i8*, i8** %struct_field14, align 8
  %apply_result16 = call i32 %fdef13(i8* %cap15, i1 false)
  ret i32 %apply_result16
}

define %List* @lambda.7(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds %List, %List* %apply_result, i32 0, i32 2
  %fi = load { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }** %struct_field5, align 8
  %struct_field6 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 0
  %fdef7 = load { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)** %struct_field6, align 8
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 1
  %cap9 = load i8*, i8** %struct_field8, align 8
  %apply_result10 = call { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %fdef7(i8* %cap9, i1 false)
  %struct_field11 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %apply_result10, i32 0, i32 1
  %"tuple field" = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field11, align 8
  %struct_field12 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 0
  %fdef13 = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field12, align 8
  %struct_field14 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 1
  %cap15 = load i8*, i8** %struct_field14, align 8
  %apply_result16 = call %List* %fdef13(i8* %cap15, i1 false)
  ret %List* %apply_result16
}

define { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* @lambda.8(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %tuple = bitcast i8* %malloccall to { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall2 to { i32 (i8*, i1)*, i8* }*
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field3 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 2
  %capvar4 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %struct_field3, align 8
  %malloccall5 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall5 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }*
  %struct_field6 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 1
  store { i32 (i8*, i1)*, i8* }* %capvar4, { i32 (i8*, i1)*, i8* }** %struct_field6, align 8
  %struct_field7 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field7, align 8
  %capstruct = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field8 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.9, i32 (i8*, i1)** %struct_field8, align 8
  %struct_field9 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field9, align 8
  %malloccall10 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure11 = bitcast i8* %malloccall10 to { %List* (i8*, i1)*, i8* }*
  %struct_field12 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar13 = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field12, align 8
  %struct_field14 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar15 = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field14, align 8
  %struct_field16 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 3
  %capvar17 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field16, align 8
  %malloccall18 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct19 = bitcast i8* %malloccall18 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }*
  %struct_field20 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct19, i32 0, i32 2
  store { %List* (i8*, i1)*, i8* }* %capvar17, { %List* (i8*, i1)*, i8* }** %struct_field20, align 8
  %struct_field21 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct19, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar15, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field21, align 8
  %struct_field22 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct19, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar13, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field22, align 8
  %capstruct23 = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %captured_struct19 to i8*
  %struct_field24 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure11, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.11, %List* (i8*, i1)** %struct_field24, align 8
  %struct_field25 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure11, i32 0, i32 1
  store i8* %capstruct23, i8** %struct_field25, align 8
  %struct_field26 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %tuple, i32 0, i32 1
  store { %List* (i8*, i1)*, i8* }* %fun_closure11, { %List* (i8*, i1)*, i8* }** %struct_field26, align 8
  %struct_field27 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %tuple, i32 0, i32 0
  store { i32 (i8*, i1)*, i8* }* %fun_closure, { i32 (i8*, i1)*, i8* }** %struct_field27, align 8
  ret { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %tuple
}

define i32 @lambda.9(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 0
  %fdef6 = load i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i32 (i8*, { i32 (i8*, i1)*, i8* }*)** %struct_field5, align 8
  %struct_field7 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 1
  %cap8 = load i8*, i8** %struct_field7, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i32 (i8*, i1)*, i8* }*
  %struct_field9 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar10 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %struct_field9, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, i1)*, i8* }* }* getelementptr ({ { i32 (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall11 to { { i32 (i8*, i1)*, i8* }* }*
  %struct_field12 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { i32 (i8*, i1)*, i8* }* %capvar10, { i32 (i8*, i1)*, i8* }** %struct_field12, align 8
  %capstruct = bitcast { { i32 (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field13 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.10, i32 (i8*, i1)** %struct_field13, align 8
  %struct_field14 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field14, align 8
  %apply_result15 = call i32 %fdef6(i8* %cap8, { i32 (i8*, i1)*, i8* }* %fun_closure)
  ret i32 %apply_result15
}

define i32 @lambda.10(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { i32 (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { i32 (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call i32 %fdef(i8* %cap4, i1 false)
  ret i32 %apply_result
}

define %List* @lambda.11(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 0
  %fdef6 = load { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)** %struct_field5, align 8
  %struct_field7 = getelementptr inbounds { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 1
  %cap8 = load i8*, i8** %struct_field7, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* getelementptr ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*
  %struct_field9 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar10 = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field9, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall11 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field12 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar10, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field12, align 8
  %capstruct = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field13 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)* @lambda.12, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field13, align 8
  %struct_field14 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field14, align 8
  %apply_result15 = call { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fdef6(i8* %cap8, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure)
  %struct_field16 = getelementptr inbounds { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result15, i32 0, i32 0
  %fdef17 = load %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, %List* (i8*, { %List* (i8*, i1)*, i8* }*)** %struct_field16, align 8
  %struct_field18 = getelementptr inbounds { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result15, i32 0, i32 1
  %cap19 = load i8*, i8** %struct_field18, align 8
  %malloccall20 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure21 = bitcast i8* %malloccall20 to { %List* (i8*, i1)*, i8* }*
  %struct_field22 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 2
  %capvar23 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field22, align 8
  %malloccall24 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct25 = bitcast i8* %malloccall24 to { { %List* (i8*, i1)*, i8* }* }*
  %struct_field26 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %captured_struct25, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %capvar23, { %List* (i8*, i1)*, i8* }** %struct_field26, align 8
  %capstruct27 = bitcast { { %List* (i8*, i1)*, i8* }* }* %captured_struct25 to i8*
  %struct_field28 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure21, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.13, %List* (i8*, i1)** %struct_field28, align 8
  %struct_field29 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure21, i32 0, i32 1
  store i8* %capstruct27, i8** %struct_field29, align 8
  %apply_result30 = call %List* %fdef17(i8* %cap19, { %List* (i8*, i1)*, i8* }* %fun_closure21)
  ret %List* %apply_result30
}

define { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* @lambda.12(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  ret { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result
}

define %List* @lambda.13(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  ret %List* %apply_result
}

define i1 @lambda.14(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  ret i1 false
}

declare i32 @printf(i8*, ...)

define { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* @addone(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* getelementptr ({ i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall2 to {}*
  %capstruct = bitcast {}* %captured_struct to i8*
  %struct_field = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, { i32 (i8*, i1)*, i8* }*)* @lambda.15, i32 (i8*, { i32 (i8*, i1)*, i8* }*)** %struct_field, align 8
  %struct_field3 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field3, align 8
  ret { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure
}

define i32 @lambda.15(i8* %0, { i32 (i8*, i1)*, i8* }* %x) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %x1 = alloca { i32 (i8*, i1)*, i8* }*, align 8
  store { i32 (i8*, i1)*, i8* }* %x, { i32 (i8*, i1)*, i8* }** %x1, align 8
  %x2 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %x1, align 8
  %struct_field = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %x2, i32 0, i32 0
  %fdef = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field, align 8
  %struct_field3 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %x2, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call i32 %fdef(i8* %cap4, i1 false)
  %temp = add i32 %apply_result, 1
  ret i32 %temp
}

define { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* @nat(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* getelementptr ({ %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }*
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar3 = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field2, align 8
  %struct_field4 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 2
  %capvar5 = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field4, align 8
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall6 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field7 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 2
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar5, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field7, align 8
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar3, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field8, align 8
  %struct_field9 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field9, align 8
  %capstruct = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field10 = getelementptr inbounds { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 0
  store %List* (i8*, { i1 (i8*, i1)*, i8* }*)* @lambda.16, %List* (i8*, { i1 (i8*, i1)*, i8* }*)** %struct_field10, align 8
  %struct_field11 = getelementptr inbounds { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field11, align 8
  ret { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure
}

define %List* @lambda.16(i8* %0, { i1 (i8*, i1)*, i8* }* %u) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %u1 = alloca { i1 (i8*, i1)*, i8* }*, align 8
  store { i1 (i8*, i1)*, i8* }* %u, { i1 (i8*, i1)*, i8* }** %u1, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%List* getelementptr (%List, %List* null, i32 1) to i32))
  %List = bitcast i8* %malloccall to %List*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* getelementptr ({ { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall2 to { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }*
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field3 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar4 = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field3, align 8
  %struct_field5 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 2
  %capvar6 = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field5, align 8
  %malloccall7 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall7 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 2
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar6, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field8, align 8
  %struct_field9 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar4, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field9, align 8
  %struct_field10 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field10, align 8
  %capstruct = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field11 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)* @lambda.17, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)** %struct_field11, align 8
  %struct_field12 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field12, align 8
  %struct_field13 = getelementptr inbounds %List, %List* %List, i32 0, i32 2
  store { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fun_closure, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }** %struct_field13, align 8
  %struct_field14 = getelementptr inbounds %List, %List* %List, i32 0, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @vcon_name.4, i32 0, i32 0), i8** %struct_field14, align 8
  ret %List* %List
}

define { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* @lambda.17(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %tuple = bitcast i8* %malloccall to { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall2 to { i32 (i8*, i1)*, i8* }*
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall3 to {}*
  %capstruct = bitcast {}* %captured_struct to i8*
  %struct_field = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.18, i32 (i8*, i1)** %struct_field, align 8
  %struct_field4 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field4, align 8
  %malloccall5 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure6 = bitcast i8* %malloccall5 to { %List* (i8*, i1)*, i8* }*
  %struct_field7 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field7, align 8
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar9 = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field8, align 8
  %struct_field10 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 2
  %capvar11 = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field10, align 8
  %malloccall12 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct13 = bitcast i8* %malloccall12 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field14 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct13, i32 0, i32 2
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar11, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field14, align 8
  %struct_field15 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct13, i32 0, i32 1
  store { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar9, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field15, align 8
  %struct_field16 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct13, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field16, align 8
  %capstruct17 = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct13 to i8*
  %struct_field18 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure6, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.19, %List* (i8*, i1)** %struct_field18, align 8
  %struct_field19 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure6, i32 0, i32 1
  store i8* %capstruct17, i8** %struct_field19, align 8
  %struct_field20 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %tuple, i32 0, i32 1
  store { %List* (i8*, i1)*, i8* }* %fun_closure6, { %List* (i8*, i1)*, i8* }** %struct_field20, align 8
  %struct_field21 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %tuple, i32 0, i32 0
  store { i32 (i8*, i1)*, i8* }* %fun_closure, { i32 (i8*, i1)*, i8* }** %struct_field21, align 8
  ret { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %tuple
}

define i32 @lambda.18(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  ret i32 1
}

define %List* @lambda.19(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar = load { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 0
  %fdef6 = load { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)** %struct_field5, align 8
  %struct_field7 = getelementptr inbounds { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }, { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 1
  %cap8 = load i8*, i8** %struct_field7, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* getelementptr ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*
  %struct_field9 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar10 = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field9, align 8
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall11 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field12 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar10, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field12, align 8
  %capstruct = bitcast { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field13 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)* @lambda.20, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field13, align 8
  %struct_field14 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field14, align 8
  %apply_result15 = call { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fdef6(i8* %cap8, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %fun_closure)
  %struct_field16 = getelementptr inbounds { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result15, i32 0, i32 0
  %fdef17 = load %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, %List* (i8*, { %List* (i8*, i1)*, i8* }*)** %struct_field16, align 8
  %struct_field18 = getelementptr inbounds { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result15, i32 0, i32 1
  %cap19 = load i8*, i8** %struct_field18, align 8
  %malloccall20 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure21 = bitcast i8* %malloccall20 to { %List* (i8*, i1)*, i8* }*
  %struct_field22 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { %List* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 2
  %capvar23 = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field22, align 8
  %malloccall24 = tail call i8* @malloc(i32 ptrtoint ({ { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct25 = bitcast i8* %malloccall24 to { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field26 = getelementptr inbounds { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct25, i32 0, i32 0
  store { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar23, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field26, align 8
  %capstruct27 = bitcast { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct25 to i8*
  %struct_field28 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure21, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.21, %List* (i8*, i1)** %struct_field28, align 8
  %struct_field29 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure21, i32 0, i32 1
  store i8* %capstruct27, i8** %struct_field29, align 8
  %apply_result30 = call %List* %fdef17(i8* %cap19, { %List* (i8*, i1)*, i8* }* %fun_closure21)
  ret %List* %apply_result30
}

define { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* @lambda.20(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  ret { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result
}

define %List* @lambda.21(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 0
  %fdef6 = load %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, %List* (i8*, { i1 (i8*, i1)*, i8* }*)** %struct_field5, align 8
  %struct_field7 = getelementptr inbounds { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 1
  %cap8 = load i8*, i8** %struct_field7, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i1 (i8*, i1)*, i8* }* getelementptr ({ i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i1 (i8*, i1)*, i8* }*
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall9 to {}*
  %capstruct = bitcast {}* %captured_struct to i8*
  %struct_field10 = getelementptr inbounds { i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i1 (i8*, i1)* @lambda.22, i1 (i8*, i1)** %struct_field10, align 8
  %struct_field11 = getelementptr inbounds { i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field11, align 8
  %apply_result12 = call %List* %fdef6(i8* %cap8, { i1 (i8*, i1)*, i8* }* %fun_closure)
  ret %List* %apply_result12
}

define i1 @lambda.22(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  ret i1 false
}

define { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* @takePrint(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* getelementptr ({ { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }*
  %struct_field = getelementptr inbounds { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint ({ { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall2 to { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field3 = getelementptr inbounds { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field3, align 8
  %capstruct = bitcast { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field4 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 0
  store { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)* @lambda.23, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)** %struct_field4, align 8
  %struct_field5 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field5, align 8
  ret { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fun_closure
}

define { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* @lambda.23(i8* %0, { %List* (i8*, i1)*, i8* }* %l) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %l1 = alloca { %List* (i8*, i1)*, i8* }*, align 8
  store { %List* (i8*, i1)*, i8* }* %l, { %List* (i8*, i1)*, i8* }** %l1, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* getelementptr ({ i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }*
  %l2 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %l1, align 8
  %struct_field = getelementptr inbounds { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall3 to { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %struct_field4 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 1
  store { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field4, align 8
  %struct_field5 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %l2, { %List* (i8*, i1)*, i8* }** %struct_field5, align 8
  %capstruct = bitcast { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field6 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, { i32 (i8*, i1)*, i8* }*)* @lambda.24, i32 (i8*, { i32 (i8*, i1)*, i8* }*)** %struct_field6, align 8
  %struct_field7 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field7, align 8
  ret { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fun_closure
}

define i32 @lambda.24(i8* %0, { i32 (i8*, i1)*, i8* }* %i) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %i1 = alloca { i32 (i8*, i1)*, i8* }*, align 8
  store { i32 (i8*, i1)*, i8* }* %i, { i32 (i8*, i1)*, i8* }** %i1, align 8
  %i2 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %i1, align 8
  %struct_field = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %i2, i32 0, i32 0
  %fdef = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field, align 8
  %struct_field3 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %i2, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call i32 %fdef(i8* %cap4, i1 false)
  %temp = icmp eq i32 %apply_result, 0
  br i1 %temp, label %then, label %else

then:                                             ; preds = %entry
  br label %ifcon87

else:                                             ; preds = %entry
  %struct_field5 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field5, align 8
  %struct_field6 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef7 = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field6, align 8
  %struct_field8 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap9 = load i8*, i8** %struct_field8, align 8
  %apply_result10 = call %List* %fdef7(i8* %cap9, i1 false)
  %struct_field11 = getelementptr inbounds %List, %List* %apply_result10, i32 0, i32 0
  %tag = load i8*, i8** %struct_field11, align 8
  %temp12 = icmp eq i8* %tag, getelementptr inbounds ([5 x i8], [5 x i8]* @vcon_name.4, i32 0, i32 0)
  br i1 %temp12, label %then13, label %else71

then13:                                           ; preds = %else
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i32 (i8*, i1)*, i8* }*
  %struct_field14 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar15 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field14, align 8
  %malloccall16 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall16 to { { %List* (i8*, i1)*, i8* }* }*
  %struct_field17 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %captured_struct, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %capvar15, { %List* (i8*, i1)*, i8* }** %struct_field17, align 8
  %capstruct = bitcast { { %List* (i8*, i1)*, i8* }* }* %captured_struct to i8*
  %struct_field18 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.25, i32 (i8*, i1)** %struct_field18, align 8
  %struct_field19 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field19, align 8
  %y = alloca { i32 (i8*, i1)*, i8* }*, align 8
  store { i32 (i8*, i1)*, i8* }* %fun_closure, { i32 (i8*, i1)*, i8* }** %y, align 8
  %malloccall20 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure21 = bitcast i8* %malloccall20 to { %List* (i8*, i1)*, i8* }*
  %struct_field22 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar23 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field22, align 8
  %malloccall24 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct25 = bitcast i8* %malloccall24 to { { %List* (i8*, i1)*, i8* }* }*
  %struct_field26 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %captured_struct25, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %capvar23, { %List* (i8*, i1)*, i8* }** %struct_field26, align 8
  %capstruct27 = bitcast { { %List* (i8*, i1)*, i8* }* }* %captured_struct25 to i8*
  %struct_field28 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure21, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.26, %List* (i8*, i1)** %struct_field28, align 8
  %struct_field29 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure21, i32 0, i32 1
  store i8* %capstruct27, i8** %struct_field29, align 8
  %ys = alloca { %List* (i8*, i1)*, i8* }*, align 8
  store { %List* (i8*, i1)*, i8* }* %fun_closure21, { %List* (i8*, i1)*, i8* }** %ys, align 8
  %y30 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %y, align 8
  %struct_field31 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %y30, i32 0, i32 0
  %fdef32 = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field31, align 8
  %struct_field33 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %y30, i32 0, i32 1
  %cap34 = load i8*, i8** %struct_field33, align 8
  %apply_result35 = call i32 %fdef32(i8* %cap34, i1 false)
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i32 %apply_result35)
  %struct_field36 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 1
  %capvar37 = load { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field36, align 8
  %struct_field38 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar37, i32 0, i32 0
  %fdef39 = load { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field38, align 8
  %struct_field40 = getelementptr inbounds { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar37, i32 0, i32 1
  %cap41 = load i8*, i8** %struct_field40, align 8
  %apply_result42 = call { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %fdef39(i8* %cap41, i1 false)
  %struct_field43 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result42, i32 0, i32 0
  %fdef44 = load { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)** %struct_field43, align 8
  %struct_field45 = getelementptr inbounds { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }, { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* %apply_result42, i32 0, i32 1
  %cap46 = load i8*, i8** %struct_field45, align 8
  %malloccall47 = tail call i8* @malloc(i32 ptrtoint ({ %List* (i8*, i1)*, i8* }* getelementptr ({ %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure48 = bitcast i8* %malloccall47 to { %List* (i8*, i1)*, i8* }*
  %ys49 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %ys, align 8
  %malloccall50 = tail call i8* @malloc(i32 ptrtoint ({ { %List* (i8*, i1)*, i8* }* }* getelementptr ({ { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct51 = bitcast i8* %malloccall50 to { { %List* (i8*, i1)*, i8* }* }*
  %struct_field52 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %captured_struct51, i32 0, i32 0
  store { %List* (i8*, i1)*, i8* }* %ys49, { %List* (i8*, i1)*, i8* }** %struct_field52, align 8
  %capstruct53 = bitcast { { %List* (i8*, i1)*, i8* }* }* %captured_struct51 to i8*
  %struct_field54 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure48, i32 0, i32 0
  store %List* (i8*, i1)* @lambda.27, %List* (i8*, i1)** %struct_field54, align 8
  %struct_field55 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %fun_closure48, i32 0, i32 1
  store i8* %capstruct53, i8** %struct_field55, align 8
  %apply_result56 = call { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %fdef44(i8* %cap46, { %List* (i8*, i1)*, i8* }* %fun_closure48)
  %struct_field57 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result56, i32 0, i32 0
  %fdef58 = load i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i32 (i8*, { i32 (i8*, i1)*, i8* }*)** %struct_field57, align 8
  %struct_field59 = getelementptr inbounds { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }, { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* %apply_result56, i32 0, i32 1
  %cap60 = load i8*, i8** %struct_field59, align 8
  %malloccall61 = tail call i8* @malloc(i32 ptrtoint ({ i32 (i8*, i1)*, i8* }* getelementptr ({ i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure62 = bitcast i8* %malloccall61 to { i32 (i8*, i1)*, i8* }*
  %i63 = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %i1, align 8
  %malloccall64 = tail call i8* @malloc(i32 ptrtoint ({ { i32 (i8*, i1)*, i8* }* }* getelementptr ({ { i32 (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }* }* null, i32 1) to i32))
  %captured_struct65 = bitcast i8* %malloccall64 to { { i32 (i8*, i1)*, i8* }* }*
  %struct_field66 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }* }* %captured_struct65, i32 0, i32 0
  store { i32 (i8*, i1)*, i8* }* %i63, { i32 (i8*, i1)*, i8* }** %struct_field66, align 8
  %capstruct67 = bitcast { { i32 (i8*, i1)*, i8* }* }* %captured_struct65 to i8*
  %struct_field68 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure62, i32 0, i32 0
  store i32 (i8*, i1)* @lambda.28, i32 (i8*, i1)** %struct_field68, align 8
  %struct_field69 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %fun_closure62, i32 0, i32 1
  store i8* %capstruct67, i8** %struct_field69, align 8
  %apply_result70 = call i32 %fdef58(i8* %cap60, { i32 (i8*, i1)*, i8* }* %fun_closure62)
  br label %ifcon85

else71:                                           ; preds = %else
  %struct_field72 = getelementptr inbounds { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }*, { { { i32 (i8*, { i32 (i8*, i1)*, i8* }*)*, i8* }* (i8*, { %List* (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar73 = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field72, align 8
  %struct_field74 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar73, i32 0, i32 0
  %fdef75 = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field74, align 8
  %struct_field76 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar73, i32 0, i32 1
  %cap77 = load i8*, i8** %struct_field76, align 8
  %apply_result78 = call %List* %fdef75(i8* %cap77, i1 false)
  %struct_field79 = getelementptr inbounds %List, %List* %apply_result78, i32 0, i32 0
  %tag80 = load i8*, i8** %struct_field79, align 8
  %temp81 = icmp eq i8* %tag80, getelementptr inbounds ([4 x i8], [4 x i8]* @vcon_name, i32 0, i32 0)
  br i1 %temp81, label %then82, label %else83

then82:                                           ; preds = %else71
  br label %ifcon

else83:                                           ; preds = %else71
  %printf84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.3, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @strlit, i32 0, i32 0))
  br label %ifcon

ifcon:                                            ; preds = %else83, %then82
  %iftmp = phi i32 [ 0, %then82 ], [ undef, %else83 ]
  br label %ifcon85

ifcon85:                                          ; preds = %ifcon, %then13
  %iftmp86 = phi i32 [ %apply_result70, %then13 ], [ %iftmp, %ifcon ]
  br label %ifcon87

ifcon87:                                          ; preds = %ifcon85, %then
  %iftmp88 = phi i32 [ 0, %then ], [ %iftmp86, %ifcon85 ]
  ret i32 %iftmp88
}

define i32 @lambda.25(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds %List, %List* %apply_result, i32 0, i32 2
  %fi = load { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }** %struct_field5, align 8
  %struct_field6 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 0
  %fdef7 = load { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)** %struct_field6, align 8
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 1
  %cap9 = load i8*, i8** %struct_field8, align 8
  %apply_result10 = call { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %fdef7(i8* %cap9, i1 false)
  %struct_field11 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %apply_result10, i32 0, i32 0
  %"tuple field" = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %struct_field11, align 8
  %struct_field12 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 0
  %fdef13 = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field12, align 8
  %struct_field14 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 1
  %cap15 = load i8*, i8** %struct_field14, align 8
  %apply_result16 = call i32 %fdef13(i8* %cap15, i1 false)
  ret i32 %apply_result16
}

define %List* @lambda.26(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds %List, %List* %apply_result, i32 0, i32 2
  %fi = load { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }*, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }** %struct_field5, align 8
  %struct_field6 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 0
  %fdef7 = load { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)** %struct_field6, align 8
  %struct_field8 = getelementptr inbounds { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }, { { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* (i8*, i1)*, i8* }* %fi, i32 0, i32 1
  %cap9 = load i8*, i8** %struct_field8, align 8
  %apply_result10 = call { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %fdef7(i8* %cap9, i1 false)
  %struct_field11 = getelementptr inbounds { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }* }* %apply_result10, i32 0, i32 1
  %"tuple field" = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field11, align 8
  %struct_field12 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 0
  %fdef13 = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field12, align 8
  %struct_field14 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %"tuple field", i32 0, i32 1
  %cap15 = load i8*, i8** %struct_field14, align 8
  %apply_result16 = call %List* %fdef13(i8* %cap15, i1 false)
  ret %List* %apply_result16
}

define %List* @lambda.27(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { %List* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { %List* (i8*, i1)*, i8* }* }, { { %List* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { %List* (i8*, i1)*, i8* }*, { %List* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load %List* (i8*, i1)*, %List* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { %List* (i8*, i1)*, i8* }, { %List* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call %List* %fdef(i8* %cap4, i1 false)
  ret %List* %apply_result
}

define i32 @lambda.28(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { i32 (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { i32 (i8*, i1)*, i8* }* }, { { i32 (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { i32 (i8*, i1)*, i8* }*, { i32 (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load i32 (i8*, i1)*, i32 (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { i32 (i8*, i1)*, i8* }, { i32 (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call i32 %fdef(i8* %cap4, i1 false)
  %temp = sub i32 %apply_result, 1
  ret i32 %temp
}

define %List* @lambda.29(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  %struct_field = getelementptr inbounds { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }, { { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* }* %cap, i32 0, i32 0
  %capvar = load { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }*, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }** %struct_field, align 8
  %struct_field2 = getelementptr inbounds { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 0
  %fdef = load { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)** %struct_field2, align 8
  %struct_field3 = getelementptr inbounds { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }, { { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* (i8*, i1)*, i8* }* %capvar, i32 0, i32 1
  %cap4 = load i8*, i8** %struct_field3, align 8
  %apply_result = call { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %fdef(i8* %cap4, i1 false)
  %struct_field5 = getelementptr inbounds { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 0
  %fdef6 = load %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, %List* (i8*, { i1 (i8*, i1)*, i8* }*)** %struct_field5, align 8
  %struct_field7 = getelementptr inbounds { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }, { %List* (i8*, { i1 (i8*, i1)*, i8* }*)*, i8* }* %apply_result, i32 0, i32 1
  %cap8 = load i8*, i8** %struct_field7, align 8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ i1 (i8*, i1)*, i8* }* getelementptr ({ i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* null, i32 1) to i32))
  %fun_closure = bitcast i8* %malloccall to { i1 (i8*, i1)*, i8* }*
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ({}* getelementptr ({}, {}* null, i32 1) to i32))
  %captured_struct = bitcast i8* %malloccall9 to {}*
  %capstruct = bitcast {}* %captured_struct to i8*
  %struct_field10 = getelementptr inbounds { i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 0
  store i1 (i8*, i1)* @lambda.30, i1 (i8*, i1)** %struct_field10, align 8
  %struct_field11 = getelementptr inbounds { i1 (i8*, i1)*, i8* }, { i1 (i8*, i1)*, i8* }* %fun_closure, i32 0, i32 1
  store i8* %capstruct, i8** %struct_field11, align 8
  %apply_result12 = call %List* %fdef6(i8* %cap8, { i1 (i8*, i1)*, i8* }* %fun_closure)
  ret %List* %apply_result12
}

define i1 @lambda.30(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  ret i1 false
}

define i32 @lambda.31(i8* %0, i1 %unit) {
entry:
  %1 = alloca i8*, align 8
  store i8* %0, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %cap = bitcast i8* %2 to {}*
  %unit1 = alloca i1, align 1
  store i1 %unit, i1* %unit1, align 1
  ret i32 6
}

